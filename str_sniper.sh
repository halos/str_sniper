#!/bin/bash

if [ $# -ne 1 ] ; then
	echo 'Need one parameter'
	exit
fi

# define files

tmp_file='/tmp/a_s'
tmp_file2='/tmp/a_s2'

# clear temporary data

if [ -e $tmp_file ]; then
	rm $tmp_file
fi

if [ -e $tmp_file2 ]; then
	rm $tmp_file2
fi

# get all strings

touch $tmp_file
input=$1

strings -e s $input >> $tmp_file
#strings -e S $input >> $tmp_file
strings -e l $input >> $tmp_file
strings -e L $input >> $tmp_file
strings -e b $input >> $tmp_file
strings -e B $input >> $tmp_file

# delete repeated strings

cat $tmp_file | sort | uniq | cat - > $tmp_file2
mv $tmp_file2 $tmp_file

# convert ascii encoded strings

cat $tmp_file | python ascii2char.py > $tmp_file2
mv $tmp_file2 $tmp_file

# remove non-printable characters generated by ascii2char.py

cat $tmp_file | strings> $tmp_file2
mv $tmp_file2 $tmp_file

# define regular expressions

IP_re='^[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}$'
URL_re='www\|http\|\/\/\|\.com'
path_re=\\\\

echo '---> ### URLs & IPs ### <---'
echo
cat $tmp_file | grep $URL_re'\|'$IP_re
echo

echo '---> ### Paths ### <---'
echo
cat $tmp_file | grep $path_re
echo

echo '---> ### Other strings  ### <---'
echo
cat $tmp_file | grep -v $URL_re'\|'$IP_re'\|'$path_re

rm $tmp_file

